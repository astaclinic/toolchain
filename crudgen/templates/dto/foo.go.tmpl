package dto

import (
	"time"

	"{{.Package}}/{{.OutDir}}/{{.LowerName}}/entities"
)

type {{.CapitalizedName}} struct {
	ID        uint       `json:"id" example:"1"`
{{range .Fields}}{{if not .Association}}    {{.CapitalizedName}} {{if not .Array}}*{{end}}{{.Type}} `json:"{{.SnakeName}}"{{if not .Optional}} validate:"required"{{end}}`
{{else if eq .Association "hasOne"}}    {{.CapitalizedName}}ID *uint `json:"{{.SnakeName}}_id"`
{{end}}{{end}}    CreatedAt *time.Time `json:"created_at"`
	UpdatedAt *time.Time `json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at"`
}

func FromEntity({{.Name}} *entities.{{.CapitalizedName}}) *{{.CapitalizedName}} {
	{{.Name}}Dto := {{.CapitalizedName}}{
		ID:        {{.Name}}.ID,
{{range .Fields}}{{if not .Association}}        {{.CapitalizedName}}: {{$.Name}}.{{.CapitalizedName}},
{{else if eq .Association "hasOne"}}        {{.CapitalizedName}}ID: {{$.Name}}.{{.CapitalizedName}}ID,
{{end}}{{end}}        CreatedAt: &{{.Name}}.CreatedAt,
		UpdatedAt: &{{.Name}}.UpdatedAt,
	}
	if {{.Name}}.DeletedAt.Valid {
		{{.Name}}Dto.DeletedAt = &{{.Name}}.DeletedAt.Time
	}
	return &{{.Name}}Dto
}
